model_tuned = models.resnet18(weights="IMAGENET1K_V1")

num_features = model_tuned.fc.in_features
output_size = 2
model_tuned.fc = nn.Linear(num_features, output_size)
model_tuned = model_tuned.to(device)
criterion = nn.CrossEntropyLoss()
optimizer = optim.Adam(model_tuned.parameters(), lr=5e-4)
BatchSize = 64
max_iters = 15

#3 in whatsapp 

train_losses: 
 [0.2130483529465571, 0.13517841595153127, 0.1536617474451577, 0.14275560746927046, 0.12934085076531, 0.1101229399891672, 0.12553747529251652, 0.11867556944068543, 0.10259436096596179, 0.09982114929263874, 0.10888157454363145, 0.103899691201985, 0.1103927820219383, 0.09971362789724507, 0.11076395819752903] 
 train_accs 
 [0.903954802259887, 0.9393596986817325, 0.9273069679849341, 0.935969868173258, 0.943502824858757, 0.9525423728813559, 0.9397363465160076, 0.9487758945386064, 0.9564971751412429, 0.956120527306968, 0.951789077212806, 0.9536723163841808, 0.9502824858757062, 0.9568738229755179, 0.9487758945386064] 
 val_accs 
 [0.968944099378882, 0.955831608005521, 0.9820565907522429, 0.9820565907522429, 0.9710144927536232, 0.9799861973775017, 0.9848171152518979, 0.9855072463768116, 0.9827467218771567, 0.979296066252588, 0.9537612146307799, 0.9820565907522429, 0.9848171152518979, 0.9882677708764666, 0.9799861973775017] 
 val_losses 
 [0.08433284970698396, 0.11217956890765349, 0.049995289147517205, 0.04683915805007319, 0.0841434461606462, 0.06078162076552009, 0.05361411785816143, 0.0434317358462892, 0.05545531805627835, 0.058376713774794954, 0.12046101892957035, 0.047959626862474604, 0.035613676081260495, 0.033304444799910564, 0.056609159113107835] 
 test_accs 
 [0.9857369661331177] 
 test_losses 
 [0.029317082816560747]

#######################################################################################



model_tuned = models.resnet50(weights="IMAGENET1K_V1")

num_features = model_tuned.fc.in_features
output_size = 2
model_tuned.fc = nn.Linear(num_features, output_size)
model_tuned = model_tuned.to(device)
criterion = nn.CrossEntropyLoss()
optimizer = optim.Adam(model_tuned.parameters(), lr=5e-4)
BatchSize = 64
max_iters = 15
#4 in whatsapp


train_losses: 
 [0.24456285882579853, 0.19330230965200118, 0.15952694569407436, 0.1497082280770309, 0.13915474913775808, 0.14170427701230776, 0.15913743605721467, 0.13060916825259022, 0.12665138821873512, 0.12343283930965288, 0.11916998737051437, 0.1299499894771199, 0.11881663095199006, 0.11889198817831872, 0.12152663112921454] 
 train_accs 
 [0.8941619585687383, 0.9129943502824859, 0.932015065913371, 0.9367231638418079, 0.9389830508474576, 0.9410546139359699, 0.9293785310734464, 0.9397363465160076, 0.9429378531073446, 0.9436911487758946, 0.9495291902071563, 0.9444444444444444, 0.9455743879472693, 0.9499058380414312, 0.9440677966101695] 
 val_accs 
 [0.9668737060041408, 0.9806763285024155, 0.971704623878537, 0.9820565907522429, 0.979296066252588, 0.9744651483781919, 0.9765355417529331, 0.979296066252588, 0.9806763285024155, 0.9799861973775017, 0.9834368530020704, 0.9744651483781919, 0.979296066252588, 0.971704623878537, 0.9772256728778468] 
 val_losses 
 [0.09991574411847988, 0.05498281535175112, 0.0784656695553646, 0.06180780353712328, 0.06213490519475955, 0.06908590600583535, 0.0639603362978533, 0.05366199796928094, 0.060667156463577634, 0.05812773558653742, 0.041257712448862935, 0.06577433346467976, 0.05218194223544448, 0.06440535866963279, 0.049314657598990994] 
 test_accs 
 [0.9873217344284058] 
 test_losses 
 [0.030481948036104205]